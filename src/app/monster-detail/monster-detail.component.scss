@import '../../assets/css/colors';

.mat-card {
  padding: 0;
}

// NOT A NUMBER
// I put results that may return NaN into an element's class
// to hack around NaN _sometimes_ resolving as true, because JS is stupid.
// This affects creatures without values for abilities (undead's CON score)
// and a bunch of spells/spell-like abilities that don't have DCs.
.NaN {
  .spell-like-abilities & {
    display: none;
  }
  .ability-score & {
    display: none;
  }
}

.ability-score-NaN {
  &::after {
    content: "â€”"
  }
}

ul {
  padding: 0;
}

section > * {
  padding: 16px;
}

.block {

  h4 {
    text-transform: capitalize;
  }
  
  br {
    display: none;
  }
}

.search {
  color: $color-white;
  float: right;
  &:hover, &:active, &:focus {
    color: $color-gray-20;
  }
}

.cr {
  float: right;
}

.alignment {
  text-transform: uppercase;
}

.size, .type {
  text-transform: capitalize;
}

.senses,
.auras,
.attacks,
.feats-list,
.skills-list,
.languages-list,
.defensive-abilities-list,
.ability-scores-list,
.special-attacks-list,
.immunities-list,
.weaknesses-list,
.resistances-list,
.dr-list {
  display: inline;
  margin: 0;

  .sense,
  .aura, 
  .defensive-ability,
  .special-attack,
  .feat,
  .skill,
  .language,
  .immunity,
  .weakness,
  .resistance,
  .dr {
    &:nth-child(n):nth-last-child(n+2):after {
      content: ","
    }
  }
  & > * {
    display: inline
  }

  .feat, .skill, .language {
    display: inline-block;
    text-transform: capitalize;
  }
}

.special-abilities {
  .special-ability {
    .name {
      text-transform: capitalize;
    }
  }
}